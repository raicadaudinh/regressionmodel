exp(fit2$coefficients[1]/ (fit2$coefficients[2]+ fit2$coefficients[1]) )
fit2<- glm(count~ spray, family= poisson, data= test)
test
head(test)
fit2<- glm(count~ factor(spray), family= poisson, data= test)
fit2
knot<- rep(0,10)
knot
?glm
exp(fit2$coefficients[1+fit2$coefficients[2]])
exp(fit2$coefficients[1]+fit2$coefficients[2])
exp(fit2$coefficients[1]+fit2$coefficients[2]-1)
exp(fit2$coefficients[2])
fit2<- glm(factor(spray), family= poisson, data= test)
fit2<- glm(factor(spray), family= poisson, data= test)
fit2<- glm(count~ factor(spray), family= poisson, data= test)
exp(fit2$coefficients[2]/fit2$coefficients[1])
fit2
fit2$coefficients[2]/fit2$coefficients[1]
fit2$coefficients[2]/(fit2$coefficients[1]+fit2$coefficients[2])
exp(fit2$coefficients[2]/(fit2$coefficients[1]+fit2$coefficients[2]))
exp((fit2$coefficients[1]+fit2$coefficients[2]))
exp(fit2$coefficients[2])
exp(fit2$coefficients[2]-1)
fit2<- glm(count~ factor(spray), family= poisson, data= test)
fit2
fit2<- glm(count~ factor(spray), family= poisson, data= test)
exp(O.OO5588)
exp(0.005588)
exp(0.005588/2.67415)
source('C:/Users/trand_000/Desktop/Coursera Data/regression model/project.R')
library(datasets)
data(mtcars)
library(datasets)
data(mtcars)
head(mtcars)
summary(mtcars)
help(mtcars)
ggplot(mtcars, aes(x=mpg, y=factor(am), fill=cond)) + geom_boxplot()
library(ggplot2)
ggplot(mtcars, aes(x=mpg, y=factor(am), fill=cond)) + geom_boxplot()
library(ggplot2)
ggplot(mtcars, aes(y=mpg, x=factor(am), fill=am)) + geom_boxplot()
ggplot(mtcars, aes(y=mpg, x=factor(am), fill=factor(am)) + geom_boxplot()
)
ggplot(mtcars, aes(y=mpg, x=factor(am), fill=factor(am))) + geom_boxplot()
fit<-lm(mpg~ factor(am), data=mtcars)
fit
summary(fit)
fit<- lm(mpg~.,data=mtcars)
summary(fit)
?mtcars
?apply
?mtcars
summary(mtcars)
apply(mtcars[,c("cyl", "V/S", "gear","carb")], 1, as.factor)
apply(mtcars[,c("cyl", "VS", "gear","carb")], 1, as.factor)
mtcars$cyl<- as.factor(mtcars$cyl)
mtcars$vs<- as.factor(mtcars$vs)
mtcars$gear<- as.factor(mtcars$gear)
mtcars$carb<- as.factor(mtcars.carb)
mtcars$am<- as.factor(mtcars.am)
mtcars$carb<- as.factor(mtcars$carb)
mtcars$am<- as.factor(mtcars$am)
fit<- lm(mpg~ ., data=mtcars)
summary(fit)
fitall<- lm(mpg~ ., data=mtcars)
summary(fitall)
?prcomp
fit1<-lm(mpg~ factor(am), data=mtcars)
summary(fit1)
cor(mtcars, use="complete.obs", method="kendall")
?cor
cor(mtcars)
data(mtcars)
model<- mtcars
cor(mtcars)
?pairs
pairs(~., data=mtcars)
cor(mpg~., data=mtcars)
cor<- cor(mtcars)
cor[,1]
?order
cor[,order("mpg")]
order(cor[,1])
cor[order("mpg"),1]
cor[order("mpg"),]
cor
cor[, order(1)]
class(cor[,1])
cor[, order("mpg")]
mpg<- cor[,1]
order(mpg)
sort(mpg)
sort(abs(mpg))
sort(abs(mpg), decreasing)
sort(abs(mpg), decreasing=TRE)
sort(abs(mpg), decreasing=TRUE)
pair(mpg~ wt+ cyl+ disp+hp+drat+vs+am, data=mtcars)
pairs(mpg~ wt+ cyl+ disp+hp+drat+vs+am, data=mtcars)
fit2<-lm(mpg~factor(am)+wt, data= datacars)
fit2<-lm(mpg~factor(am)+wt, data= mtcars)
summary(fit2)
fit1
ggplot(mtcars, aes(wt~seq_along(wt)))+ geom_point()
ggplot(mtcars, aes(wt~seq(1, lenght(wt))))+ geom_point()
ggplot(mtcars, aes(y=wt, x=seq(1, lenght(wt))))+ geom_point()*
)
ggplot(mtcars, aes(y=wt, x=seq(1, lenght(wt))))+ geom_point()
ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point()
ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point(aes(color=am))
ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point(aes(color=factor(am)))
head(mtcars)
lm(mpg~wt, data=mtcars)
mpg
sort(asb(mpg))
sort(abs(mpg))
par(mfrow=c(3,2))
ggplot(mtcars, aes(y=cyl, x=seq(1, length(cyl))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=disp, x=seq(1, length(disp))))+ geom_point(aes(color=factor(am)))
?mtcars
ggplot(mtcars, aes(y=hp, x=seq(1, length(hp))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=drat, x=seq(1, length(drat))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=vs, x=seq(1, length(vs))))+ geom_point(aes(color=factor(am)))
par(mfrow=c(3,2))
ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=cyl, x=seq(1, length(cyl))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=disp, x=seq(1, length(disp))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=hp, x=seq(1, length(hp))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=drat, x=seq(1, length(drat))))+ geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(y=vs, x=seq(1, length(vs))))+ geom_point(aes(color=factor(am)))
p1<-ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point(aes(color=factor(am)))
p2<-ggplot(mtcars, aes(y=cyl, x=seq(1, length(cyl))))+ geom_point(aes(color=factor(am)))
p3<-ggplot(mtcars, aes(y=disp, x=seq(1, length(disp))))+ geom_point(aes(color=factor(am)))
p4<-ggplot(mtcars, aes(y=hp, x=seq(1, length(hp))))+ geom_point(aes(color=factor(am)))
p5<-ggplot(mtcars, aes(y=drat, x=seq(1, length(drat))))+ geom_point(aes(color=factor(am)))
p6<-ggplot(mtcars, aes(y=vs, x=seq(1, length(vs))))+ geom_point(aes(color=factor(am)))
multplot(p1, p2, p3, p4, p5, p6, col=2)
multiplot(p1, p2, p3, p4, p5, p6, col=2)
multiplot(p1, p2, p3, p4, cols=2)
library(grid)
library(gridExtra)
install.packages(gridExtra)
install.packages("gridExtra")
library(grid)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, p6, ncol = 2)
HEAD5MTCARS
head(mtcars)
sort(abs(mpg))
p7<-ggplot(mtcars, aes(y=carb, x=seq(1, length(carb))))+ geom_point(aes(color=factor(am)))
p8<-ggplot(mtcars, aes(y=gear, x=seq(1, length(gear))))+ geom_point(aes(color=factor(am)))
p9<-ggplot(mtcars, aes(y=qsec, x=seq(1, length(qsec))))+ geom_point(aes(color=factor(am)))
multiplot(p1, p2, p3, p4, p5, p6,p7, p8, p9, col=2)
library(grid)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, p6, ncol = 2)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, ncol = 2)
fit3<-lm(mpg~ factor(am)+ factor(cyl)+ disp+ hp+ factor(vs)+ factor(carb)+ factor(gear)+ factor(qsec), data=mtcars)
summary(fit3)
fit3<-lm(mpg~ factor(am)+ factor(cyl)+ disp+ hp+ factor(vs)+ factor(carb)+ factor(gear)+ qsec, data=mtcars)
summary(fit3)
fit3<-lm(mpg~ factor(am)+ factor(cyl), data=mtcars)
summary(fit3)
anova(fit3, fit1)
anova(fit1, fit3)
fit4<-lm(mpg~ factor(am)+ factor(cyl)+ disp, data=mtcars)
summary(fit4)
mtcars$cyl<- as.factor(mtcars$cyl)
mtcars$vs<- as.factor(mtcars$vs)
mtcars$gear<- as.factor(mtcars$gear)
mtcars$carb<- as.factor(mtcars$carb)
mtcars$am<- as.factor(mtcars$am)
fitall<- lm(mpg~ . + -am, data=mtcars)
summary(fitall)
? ANOVA
?anova
anova(fit1, fit2, fit3, fit4)
summary(fit3)
?glm
glm(mpg~ factor(am)+ factor(cyl), data=mtcars)
fi3
fit3
summary(glm(mpg~ factor(am)+ factor(cyl), data=mtcars))
lm(mpg~ factor(am)+ wt+ wt*factor(am), data=mtcars)
test<-lm(mpg~ factor(am)+ wt+ wt*factor(am), data=mtcars)
summary(test)
anova(test, fit)
anova(test, fit3)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, ncol = 2)
int2<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl), data=mtcars)
test<-lm(mpg~ factor(am)+ wt+ wt*factor(am), data=mtcars)*
)
nt1<-lm(mpg~ factor(am)+ wt+ wt*factor(am), data=mtcars)
int1<-lm(mpg~ factor(am)+ wt+ wt*factor(am), data=mtcars)
anova(int1, int2)
int2
int1
summary(int2)
int2<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(cyl)*factor(wt), data=mtcars)
int2<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl), data=mtcars)
int3<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(cyl)*factor(wt), data=mtcars)
summary(int3)
int2<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl), data=mtcars)
int3<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(cyl)*factor(am), data=mtcars)
int3
int3<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(cyl)*factor(am), data=mtcars)
int4<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(cyl)*wt, data=mtcars)
summary(int3)
summary(int4)
int3<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ disp, data=mtcars)
anova(int1, int2, int3)
int4<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ hp, data=mtcars)
anova(int1, int2, int4)
int5<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ drat, data=mtcars)
anova(int1, int2, int5)
anova(fit1,int1, int2, int5)
int6<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(vs), data=mtcars)
anova(fit1,int1, int2, int6)
int7<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ carb, data=mtcars)
anova(fit1,int1, int2, int7)
int8<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(gear), data=mtcars)
int9<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ qsec, data=mtcars)
anova(fit1,int1, int2, int8)
anova(fit1,int1, int2, int9)
summary(int5)
summary(int9)
summary(int3)
summary(int2)
?mtcars
library(datasets)
data(mtcars)
head(mtcars)
summary(mtcars)
g<-ggplot(mtcars, aes(y=mpg, x=factor(am), fill=factor(am))) + geom_boxplot()
g
fit
fit<-lm(mpg~ factor(am), data=mtcars)
fit
summary(f
summary(fit)
summary(fit)
sort(cor(mtcars)[,1])
sort(abs(cor(mtcars)[,1])
)
sort(abs(cor(mtcars)[,1]), decreasing=TRUE)
?cor
?step
p1<-ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point(aes(color=factor(am)))
p2<-ggplot(mtcars, aes(y=cyl, x=seq(1, length(cyl))))+ geom_point(aes(color=factor(am)))
p3<-ggplot(mtcars, aes(y=disp, x=seq(1, length(disp))))+ geom_point(aes(color=factor(am)))
p4<-ggplot(mtcars, aes(y=hp, x=seq(1, length(hp))))+ geom_point(aes(color=factor(am)))
p5<-ggplot(mtcars, aes(y=drat, x=seq(1, length(drat))))+ geom_point(aes(color=factor(am)))
p6<-ggplot(mtcars, aes(y=vs, x=seq(1, length(vs))))+ geom_point(aes(color=factor(am)))
p7<-ggplot(mtcars, aes(y=carb, x=seq(1, length(carb))))+ geom_point(aes(color=factor(am)))
p8<-ggplot(mtcars, aes(y=gear, x=seq(1, length(gear))))+ geom_point(aes(color=factor(am)))
p9<-ggplot(mtcars, aes(y=qsec, x=seq(1, length(qsec))))+ geom_point(aes(color=factor(am)))
library(grid)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, ncol = 2)
p1<-ggplot(mtcars, aes(y=wt, x=seq(1, length(wt))))+ geom_point(aes(color=factor(am)))
p2<-ggplot(mtcars, aes(y=cyl, x=seq(1, length(cyl))))+ geom_point(aes(color=factor(am)))
p3<-ggplot(mtcars, aes(y=disp, x=seq(1, length(disp))))+ geom_point(aes(color=factor(am)))
p4<-ggplot(mtcars, aes(y=hp, x=seq(1, length(hp))))+ geom_point(aes(color=factor(am)))
p5<-ggplot(mtcars, aes(y=drat, x=seq(1, length(drat))))+ geom_point(aes(color=factor(am)))
p6<-ggplot(mtcars, aes(y=vs, x=seq(1, length(vs))))+ geom_point(aes(color=factor(am)))
p7<-ggplot(mtcars, aes(y=carb, x=seq(1, length(carb))))+ geom_point(aes(color=factor(am)))
p8<-ggplot(mtcars, aes(y=gear, x=seq(1, length(gear))))+ geom_point(aes(color=factor(am)))
p9<-ggplot(mtcars, aes(y=qsec, x=seq(1, length(qsec))))+ geom_point(aes(color=factor(am)))
sort(abs(cor(mtcars)[,1]), decreasing=TRUE)
?anova
int1<-lm(mpg~ factor(am)+ wt+ wt*factor(am), data=mtcars)
int2<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl), data=mtcars)
int3<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ disp*factor(am), data=mtcars)
int4<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ hp, data=mtcars)
int5<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ drat*factor(am), data=mtcars)
int6<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(vs), data=mtcars)
int7<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ carb, data=mtcars)
int8<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ factor(gear), data=mtcars)
int9<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ qsec, data=mtcars)
anova(int1, int2, int3, int4, int5, int6, int7, int8, int9)
?anova
anova(int1, int2, int3,int9)
anova(int1, int2,int9)
anova(fit, int1, int2, qsec)
anova(fit, int1, int2, int9)
sum<- summary(fit)
sum$adj.r.squared
rbind(summary(fit)$adj.r.squared)
rbind(summary(fit)$adj.r.squared, summary(int1)$adj.r.squared, summary(int2)$adj.r.squared, summary(int9)$adj.r.squared)
```{r app1, echo=TRUE}
The p value for am is inferior then 0.001 so we fail to reject the beta^am =0.
Nevertheless, the coefficient of am could be overevaluated. We wonder if adding other variables into our model could improve its power.</br>
data(mtcars)
```{r plot3, echo=FALSE, fig.height=5,fig.width=4}
g
sum$call
sum$terms
sum$coefficients
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
head(segmentationOriginal)
inTrain<- segmentationOriginal$Case== "Train"
training = segmentationOriginal[ inTrain,]
testing = mixtures[-inTrain,]
testing = segmentationOriginal[-inTrain,]
?train
rownames(segmentationOriginal)
colnames(segmentationOriginal)
train<- training[, -c("Class", "Case")]
train<- training[, -"Class"]
train<- training[, c(1, 4:119)]
CART<- train(x=trai, y=training$Class, method="rpart")
CART<- train(x=train, y=training$Class, method="rpart")
install.packages("rattle")
CART$finalmodel
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(ggplot2)
library(lattice)
library(caret)
inTrain<- segmentationOriginal$Case== "Train"
training = segmentationOriginal[ inTrain,]
testing = segmentationOriginal[-inTrain,]
head(segmentationOriginal)
set.seeds(125)
train<- training[, c(1, 4:119)]
CART<- train(x=train, y=training$Class, method="rpart")
CART$finalModel
library(rattle)
fancyRpartPlot(CART$finalModel)
plot(CART)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(ggplot2)
library(lattice)
library(caret)
inTrain<- segmentationOriginal$Case== "Train"
training = segmentationOriginal[ inTrain,]
testing = segmentationOriginal[-inTrain,]
head(segmentationOriginal)
set.seed(125)
train<- training[, c(1, 4:119)]
CART<- train(x=train, y=training$Class, method="rpart")
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(ggplot2)
library(lattice)
library(caret)
inTrain<- segmentationOriginal$Case== "Train"
training = segmentationOriginal[ inTrain,]
testing = segmentationOriginal[-inTrain,]
head(segmentationOriginal)
set.seed(125)
train<- training[, c(1, 4:119)]
CART<- train(x=train, y=training$Class, method="rpart")
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(ggplot2)
library(lattice)
library(caret)
inTrain<- segmentationOriginal$Case== "Train"
training = segmentationOriginal[ inTrain,]
testing = segmentationOriginal[-inTrain,]
head(segmentationOriginal)
set.seed(125)
train<- training[, c(1, 4:119)]
library(rpart)
CART<- train(x=train, y=training$Class, method="rpart")
plot(CART$modelFinal, uniform=TRUE)
library(rattle)
fancyRpartPlot(CART$finalModel)
library(rpart.plot)
install.packages(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
fancyRpartPlot(CART$finalModel)
library(pgmm)
data(olive)
olive = olive[,-1]
install.packages("pgmm")
library(pgmm)
data(olive)
olive = olive[,-1]
newdata = as.data.frame(t(colMeans(olive)))
head(olive)
predictolive<- train(x=olive[,c(2:9)], y=olive$Area, method="rpart")
library(ggplot2)
library(lattice)
library(caret)
library(rattle)
library(rpart.plot)
library(rpart)
library(rpart.plot)
library(pgmm)
data(olive)
olive = olive[,-1]
predictolive<- train(x=olive[,c(2:9)], y=olive$Area, method="rpart")
newdata = as.data.frame(t(colMeans(olive)))
predict(predictolive, newdata)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
?train
head(testSA)
trainSA = SAheart[train,-c(1, 4,5)]
head(trainSA)
trainSA = SAheart[train,-c(1, 4,5)]
testSA = SAheart[-train,-c(1, 4,5)]
set.seed(13234)
?train
names(getModelInfo()
method
names(getModelInfo(train)
)
?train
head(trainSA)
fit<- train(x=trainSA[,-7], y=trainSA$chd, method="glm", family="binomial")
response<- predict(model=fit, testSA[,-7])
?predict
response<- predict(fit, newdata=testSA[,-7])
missClass = function(testSA$chd,response){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass(testSA$chd, response)
trainset<- predict(model=fit, newdata=trainSA[,-7])
response<- predict(model=fit, newdata=testSA[,-7])
response<- predict(fit, newdata=testSA[,-7])
trainset<- predict(fit, newdata=trainSA[,-7])
missClass(testSA$chd, response)
missClass(trainsA$chd, trainset)
missClass(testSA$chd, response)
missClass(trainSA$chd, trainset)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
set.seed(33833)
head(vowel.train)
vowel.train$y<- as.factor(vowel.train)
vowel.train$y<- as.factor(vowel.train$y)
vowel.test$y<- as.factor(vowel.test$y)
fit<- train(y=vowel.train$y, x=vowel.train[,-1], method="rf")
ibrary(randomForest)
library(randomForest)
fit<- train(y=vowel.train$y, x=vowel.train[,-1], method="rf")
varImp(fit)
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
?iris
data(iris)
head(iris)
data(iris3)
head(iris3)
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
?reactive
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
require(devtools)
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='raicadaudinh',
token='955921D0869F9063D580FF10FBB891B3',
secret='PXVwTG+CztLS76ykxlRXoVKk8ndwgGCcDODkKJ3s')
library(shinyapps)
shinyapps::deployApp(C:\\Users\\trand_000\\Desktop\\Coursera Data\\Develop data product\\project)
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
deployApp()
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
deployApp()
library(shinyapps)
deployApp()
shinyapps::setAccountInfo(name='raicadaudinh',
token='955921D0869F9063D580FF10FBB891B3',
secret='PXVwTG+CztLS76ykxlRXoVKk8ndwgGCcDODkKJ3s')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
deployApp()
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
shiny::runApp('C:/Users/trand_000/Desktop/Coursera Data/Develop data product/project')
library(shinyApp)
library(shinyApps)
library(shinyapps)
shinyapps::deployApp()
library(knitr)
help(package="knitr")
knit2pdf()
setwd("C:/Users/trand_000/Desktop/Coursera Data/regression model/project final")
knit2pdf("projectfinal.Rmd")
library(datasets)
data(mtcars)
int9<-lm(mpg~ factor(am)+ wt+ wt*factor(am)+ factor(cyl)+ qsec, data=mtcars)
plot(int9)
par(mfrow = c(2,2))
plot(int9)
